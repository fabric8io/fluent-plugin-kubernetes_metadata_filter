#
# Fluentd Kubernetes Metadata Filter Plugin - Enrich Fluentd events with
# Kubernetes metadata
#
# Copyright 2015 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
---
http_interactions:
- request:
    method: get
    uri: https://localhost:8443/api
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*; q=0.5, application/xml"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Fri, 08 May 2015 10:35:37 GMT
      Content-Length:
      - '67'
    body:
      encoding: UTF-8
      string: |-
        {
          "versions": [
            "v1"
          ]
        }
    http_version: 
  recorded_at: Fri, 08 May 2015 10:35:37 GMT
- request:
    method: get
    uri: https://localhost:8443/api/v1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*; q=0.5, application/xml"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Fri, 08 May 2015 10:35:37 GMT
      Content-Length:
      - '67'
    body:
      encoding: UTF-8
      string: |-
          {
            "kind": "APIResourceList",
            "groupVersion": "v1",
            "resources": [
              {
                "name": "bindings",
                "singularName": "",
                "namespaced": true,
                "kind": "Binding",
                "verbs": [
                  "create"
                ]
              },
              {
                "name": "componentstatuses",
                "singularName": "",
                "namespaced": false,
                "kind": "ComponentStatus",
                "verbs": [
                  "get",
                  "list"
                ],
                "shortNames": [
                  "cs"
                ]
              },
              {
                "name": "configmaps",
                "singularName": "",
                "namespaced": true,
                "kind": "ConfigMap",
                "verbs": [
                  "create",
                  "delete",
                  "deletecollection",
                  "get",
                  "list",
                  "patch",
                  "update",
                  "watch"
                ],
                "shortNames": [
                  "cm"
                ]
              },
              {
                "name": "endpoints",
                "singularName": "",
                "namespaced": true,
                "kind": "Endpoints",
                "verbs": [
                  "create",
                  "delete",
                  "deletecollection",
                  "get",
                  "list",
                  "patch",
                  "update",
                  "watch"
                ],
                "shortNames": [
                  "ep"
                ]
              },
              {
                "name": "events",
                "singularName": "",
                "namespaced": true,
                "kind": "Event",
                "verbs": [
                  "create",
                  "delete",
                  "deletecollection",
                  "get",
                  "list",
                  "patch",
                  "update",
                  "watch"
                ],
                "shortNames": [
                  "ev"
                ]
              },
              {
                "name": "limitranges",
                "singularName": "",
                "namespaced": true,
                "kind": "LimitRange",
                "verbs": [
                  "create",
                  "delete",
                  "deletecollection",
                  "get",
                  "list",
                  "patch",
                  "update",
                  "watch"
                ],
                "shortNames": [
                  "limits"
                ]
              },
              {
                "name": "namespaces",
                "singularName": "",
                "namespaced": false,
                "kind": "Namespace",
                "verbs": [
                  "create",
                  "delete",
                  "get",
                  "list",
                  "patch",
                  "update",
                  "watch"
                ],
                "shortNames": [
                  "ns"
                ]
              },
              {
                "name": "namespaces/finalize",
                "singularName": "",
                "namespaced": false,
                "kind": "Namespace",
                "verbs": [
                  "update"
                ]
              },
              {
                "name": "namespaces/status",
                "singularName": "",
                "namespaced": false,
                "kind": "Namespace",
                "verbs": [
                  "get",
                  "patch",
                  "update"
                ]
              },
              {
                "name": "nodes",
                "singularName": "",
                "namespaced": false,
                "kind": "Node",
                "verbs": [
                  "create",
                  "delete",
                  "deletecollection",
                  "get",
                  "list",
                  "patch",
                  "proxy",
                  "update",
                  "watch"
                ],
                "shortNames": [
                  "no"
                ]
              },
              {
                "name": "nodes/proxy",
                "singularName": "",
                "namespaced": false,
                "kind": "Node",
                "verbs": []
              },
              {
                "name": "nodes/status",
                "singularName": "",
                "namespaced": false,
                "kind": "Node",
                "verbs": [
                  "get",
                  "patch",
                  "update"
                ]
              },
              {
                "name": "persistentvolumeclaims",
                "singularName": "",
                "namespaced": true,
                "kind": "PersistentVolumeClaim",
                "verbs": [
                  "create",
                  "delete",
                  "deletecollection",
                  "get",
                  "list",
                  "patch",
                  "update",
                  "watch"
                ],
                "shortNames": [
                  "pvc"
                ]
              },
              {
                "name": "persistentvolumeclaims/status",
                "singularName": "",
                "namespaced": true,
                "kind": "PersistentVolumeClaim",
                "verbs": [
                  "get",
                  "patch",
                  "update"
                ]
              },
              {
                "name": "persistentvolumes",
                "singularName": "",
                "namespaced": false,
                "kind": "PersistentVolume",
                "verbs": [
                  "create",
                  "delete",
                  "deletecollection",
                  "get",
                  "list",
                  "patch",
                  "update",
                  "watch"
                ],
                "shortNames": [
                  "pv"
                ]
              },
              {
                "name": "persistentvolumes/status",
                "singularName": "",
                "namespaced": false,
                "kind": "PersistentVolume",
                "verbs": [
                  "get",
                  "patch",
                  "update"
                ]
              },
              {
                "name": "pods",
                "singularName": "",
                "namespaced": true,
                "kind": "Pod",
                "verbs": [
                  "create",
                  "delete",
                  "deletecollection",
                  "get",
                  "list",
                  "patch",
                  "proxy",
                  "update",
                  "watch"
                ],
                "shortNames": [
                  "po"
                ],
                "categories": [
                  "all"
                ]
              },
              {
                "name": "pods/attach",
                "singularName": "",
                "namespaced": true,
                "kind": "Pod",
                "verbs": []
              },
              {
                "name": "pods/binding",
                "singularName": "",
                "namespaced": true,
                "kind": "Binding",
                "verbs": [
                  "create"
                ]
              },
              {
                "name": "pods/eviction",
                "singularName": "",
                "namespaced": true,
                "kind": "Eviction",
                "verbs": [
                  "create"
                ]
              },
              {
                "name": "pods/exec",
                "singularName": "",
                "namespaced": true,
                "kind": "Pod",
                "verbs": []
              },
              {
                "name": "pods/log",
                "singularName": "",
                "namespaced": true,
                "kind": "Pod",
                "verbs": [
                  "get"
                ]
              },
              {
                "name": "pods/portforward",
                "singularName": "",
                "namespaced": true,
                "kind": "Pod",
                "verbs": []
              },
              {
                "name": "pods/proxy",
                "singularName": "",
                "namespaced": true,
                "kind": "Pod",
                "verbs": []
              },
              {
                "name": "pods/status",
                "singularName": "",
                "namespaced": true,
                "kind": "Pod",
                "verbs": [
                  "get",
                  "patch",
                  "update"
                ]
              },
              {
                "name": "podtemplates",
                "singularName": "",
                "namespaced": true,
                "kind": "PodTemplate",
                "verbs": [
                  "create",
                  "delete",
                  "deletecollection",
                  "get",
                  "list",
                  "patch",
                  "update",
                  "watch"
                ]
              },
              {
                "name": "replicationcontrollers",
                "singularName": "",
                "namespaced": true,
                "kind": "ReplicationController",
                "verbs": [
                  "create",
                  "delete",
                  "deletecollection",
                  "get",
                  "list",
                  "patch",
                  "update",
                  "watch"
                ],
                "shortNames": [
                  "rc"
                ],
                "categories": [
                  "all"
                ]
              },
              {
                "name": "replicationcontrollers/scale",
                "singularName": "",
                "namespaced": true,
                "kind": "Scale",
                "verbs": [
                  "get",
                  "patch",
                  "update"
                ]
              },
              {
                "name": "replicationcontrollers/status",
                "singularName": "",
                "namespaced": true,
                "kind": "ReplicationController",
                "verbs": [
                  "get",
                  "patch",
                  "update"
                ]
              },
              {
                "name": "resourcequotas",
                "singularName": "",
                "namespaced": true,
                "kind": "ResourceQuota",
                "verbs": [
                  "create",
                  "delete",
                  "deletecollection",
                  "get",
                  "list",
                  "patch",
                  "update",
                  "watch"
                ],
                "shortNames": [
                  "quota"
                ]
              },
              {
                "name": "resourcequotas/status",
                "singularName": "",
                "namespaced": true,
                "kind": "ResourceQuota",
                "verbs": [
                  "get",
                  "patch",
                  "update"
                ]
              },
              {
                "name": "secrets",
                "singularName": "",
                "namespaced": true,
                "kind": "Secret",
                "verbs": [
                  "create",
                  "delete",
                  "deletecollection",
                  "get",
                  "list",
                  "patch",
                  "update",
                  "watch"
                ]
              },
              {
                "name": "serviceaccounts",
                "singularName": "",
                "namespaced": true,
                "kind": "ServiceAccount",
                "verbs": [
                  "create",
                  "delete",
                  "deletecollection",
                  "get",
                  "list",
                  "patch",
                  "update",
                  "watch"
                ],
                "shortNames": [
                  "sa"
                ]
              },
              {
                "name": "services",
                "singularName": "",
                "namespaced": true,
                "kind": "Service",
                "verbs": [
                  "create",
                  "delete",
                  "get",
                  "list",
                  "patch",
                  "proxy",
                  "update",
                  "watch"
                ]
              },
              {
                "name": "services/proxy",
                "singularName": "",
                "namespaced": true,
                "kind": "Service",
                "verbs": []
              },
              {
                "name": "services/status",
                "singularName": "",
                "namespaced": true,
                "kind": "Service",
                "verbs": [
                  "get",
                  "patch",
                  "update"
                ]
              }
            ]
          }
    http_version: 
  recorded_at: Fri, 08 May 2015 10:35:37 GMT
- request:
    method: get
    uri: https://localhost:8443/api
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*; q=0.5, application/xml"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
      Authorization:
      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWFh
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Sat, 09 May 2015 13:51:07 GMT
      Content-Length:
      - '67'
    body:
      encoding: UTF-8
      string: |-
        {
          "versions": [
            "v1"
          ]
        }
    http_version: 
  recorded_at: Sat, 09 May 2015 13:51:07 GMT
- request:
    method: get
    uri: https://localhost:8443/api/v1/namespaces/default/pods/fabric8-console-controller-98rqc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*; q=0.5, application/xml"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
      Authorization:
      - Bearer YzYyYzFlODMtODdhNS00ZTMyLWIzMmItNmY4NDc4OTI1ZWFh
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Sat, 09 May 2015 13:51:07 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "Pod",
          "apiVersion": "v1",
          "metadata": {
            "name": "fabric8-console-controller-98rqc",
            "generateName": "fabric8-console-controller-",
            "namespace": "default",
            "selfLink": "/api/v1/namespaces/default/pods/fabric8-console-controller-98rqc",
            "uid": "c76927af-f563-11e4-b32d-54ee7527188d",
            "resourceVersion": "3556",
            "creationTimestamp": "2015-05-08T09:22:42Z",
            "labels": {
              "component": "fabric8Console"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "openshift-cert-secrets",
                "hostPath": null,
                "emptyDir": null,
                "gcePersistentDisk": null,
                "gitRepo": null,
                "secret": {
                  "secretName": "openshift-cert-secrets"
                },
                "nfs": null,
                "iscsi": null,
                "glusterfs": null
              }
            ],
            "containers": [
              {
                "name": "fabric8-console-container",
                "image": "fabric8/hawtio-kubernetes:latest",
                "ports": [
                  {
                    "containerPort": 9090,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "OAUTH_CLIENT_ID",
                    "value": "fabric8-console"
                  },
                  {
                    "name": "OAUTH_AUTHORIZE_URI",
                    "value": "https://localhost:8443/oauth/authorize"
                  }
                ],
                "resources": {},
                "volumeMounts": [
                  {
                    "name": "openshift-cert-secrets",
                    "readOnly": true,
                    "mountPath": "/etc/secret-volume"
                  }
                ],
                "terminationMessagePath": "/dev/termination-log",
                "imagePullPolicy": "IfNotPresent",
                "capabilities": {}
              }
            ],
            "restartPolicy": "Always",
            "dnsPolicy": "ClusterFirst",
            "nodeName": "jimmi-redhat.localnet"
          },
          "status": {
            "phase": "Running",
            "Condition": [
              {
                "type": "Ready",
                "status": "True"
              }
            ],
            "hostIP": "172.17.42.1",
            "podIP": "172.17.0.4",
            "containerStatuses": [
              {
                "name": "fabric8-console-container",
                "state": {
                  "running": {
                    "startedAt": "2015-05-09T13:33:38Z"
                  }
                },
                "lastState": {},
                "ready": true,
                "restartCount": 2,
                "image": "fabric8/hawtio-kubernetes:latest",
                "imageID": "docker://b2bd1a24a68356b2f30128e6e28e672c1ef92df0d9ec01ec0c7faea5d77d2303",
                "containerID": "docker://1b1d1f61c1205fe73328c75b2945e2ce05acfba2fde16299a8103fb22e9ec58a"
              },
              {
                "name": "POD",
                "state": {
                  "termination": {
                    "exitCode": 0,
                    "startedAt": "2015-05-09T09:45:08Z",
                    "finishedAt": "2015-05-09T09:47:00Z"
                  }
                },
                "lastState": {},
                "ready": false,
                "restartCount": 1,
                "image": "openshift/origin-pod:v0.4.4",
                "imageID": "docker://81fa37a83ec46fed9dddf30a9c3c43f54bfe4b65dea74a4c152fd515a0bf92a8",
                "containerID": "docker://9c8ed1a9bbb6d9804b12379654461dcd3b447438c02c52ca7f7d2504e14ae96b"
              }
            ]
          }
        }
    http_version: 
  recorded_at: Sat, 09 May 2015 13:51:07 GMT
- request:
    method: get
    uri: https://localhost:8443/api/v1/namespaces/default
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*; q=0.5, application/xml"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json
      Date:
      - Fri, 08 May 2015 10:35:37 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: |-
        {
          "kind": "Namespace",
          "apiVersion": "v1",
          "metadata": {
            "name": "default",
            "selfLink": "/api/v1/namespaces/default",
            "uid": "898268c8-4a36-11e5-9d81-42010af0194c",
            "resourceVersion": "6",
            "creationTimestamp": "2015-05-08T09:22:01Z"
          },
          "spec": {
            "finalizers": [
                "kubernetes"
            ]
          },
          "status": {
            "phase": "Active"
          }
        }
    http_version:
  recorded_at: Fri, 08 May 2015 10:35:37 GMT
recorded_with: VCR 2.9.3
